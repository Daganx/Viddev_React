{"ast":null,"code":"var _jsxFileName = \"/Users/ios/Documents/CODE/ProjetViddevs/viddevs/src/Components/Pages/TvShows.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"../Children/Header\";\nimport \"../../assets/css/TvShows.css\";\nimport ShowPromo from \"../Children/ShowPromo\";\nimport MoviePromo from \"../Children/MoviePromo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tvshows = () => {\n  _s();\n  const [tvshows] = useState([{\n    id: 1,\n    title: \"Breaking Bad\",\n    genre: \"Drame\",\n    director: \"Vince Gilligan\",\n    year: \"2008\",\n    image: \"https://assets.nflxext.com/us/boxshots/hd1080/70143836.jpg\"\n  }, {\n    id: 1,\n    title: \"Chernobyl\",\n    genre: \"History\",\n    director: \"Johan Renck\",\n    year: \"2019\",\n    image: \"https://i.pinimg.com/originals/34/2f/78/342f78e2cd7b297868420d20e3996145.jpg\"\n  }, {\n    id: 1,\n    title: \"Twin Peaks\",\n    genre: \"Thriller\",\n    director: \"David Lynch\",\n    year: \"1990\",\n    image: \"https://m.media-amazon.com/images/I/81kk0IGqaLL._AC_SX425_.jpg\"\n  }, {\n    id: 1,\n    title: \"Rick & Morty\",\n    genre: \"Anime\",\n    director: \"Justin Roiland\",\n    year: \"2013\",\n    image: \"https://m.media-amazon.com/images/I/518I-BTdWlL._AC_.jpg\"\n  }, {\n    id: 1,\n    title: \"Arcane\",\n    genre: \"Anime\",\n    director: \"Alex Yee\",\n    year: \"2021\",\n    image: \"https://static.invenglobal.com/upload/image/2021/10/13/i1634086313758568.jpeg\"\n  }, {\n    id: 1,\n    title: \"Death Note\",\n    genre: \"Anime\",\n    director: \"Tetsurō Araki\",\n    year: \"2006\",\n    image: \"https://www.nautiljon.com/images/anime/00/08/death_note_180.jpg?1668167682\"\n  }, {\n    id: 1,\n    title: \"Black Mirror\",\n    genre: \"Dystopia\",\n    director: \"Charlie Brooker\",\n    year: \"2011\",\n    image: \"https://m.media-amazon.com/images/I/61Uq5yH0a6L._SL500_.jpg\"\n  }, {\n    id: 1,\n    title: \"Dragon Ball\",\n    genre: \"Anime\",\n    director: \"Akira Toriyama\",\n    year: \"1986\",\n    image: \"https://m.media-amazon.com/images/I/81TkSJw2vqL.jpg\"\n  }, {\n    id: 1,\n    title: \"The Office\",\n    genre: \"\",\n    director: \"\",\n    year: \"\",\n    image: \"\"\n  }, {\n    id: 1,\n    title: \"\",\n    genre: \"\",\n    director: \"\",\n    year: \"\",\n    image: \"\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: tvshows.map(tvshow => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"tvShowsContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"articleTvShows\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: tvshow.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tvshow.genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tvshow.director\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"year\",\n              children: tvshow.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tvShowsImage\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tvshow.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowPromo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoviePromo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Tvshows, \"niu/JlWsoaWsmxi2iF0GvWrmvqM=\");\n_c = Tvshows;\nexport default Tvshows;\nvar _c;\n$RefreshReg$(_c, \"Tvshows\");","map":{"version":3,"names":["React","useState","Header","ShowPromo","MoviePromo","Tvshows","tvshows","id","title","genre","director","year","image","map","tvshow"],"sources":["/Users/ios/Documents/CODE/ProjetViddevs/viddevs/src/Components/Pages/TvShows.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../Children/Header\";\nimport \"../../assets/css/TvShows.css\";  \nimport ShowPromo from \"../Children/ShowPromo\";\nimport MoviePromo from \"../Children/MoviePromo\";\n\nconst Tvshows = () => {\n  const [tvshows,] = useState([\n    { id: 1, title: \"Breaking Bad\", genre: \"Drame\", director: \"Vince Gilligan\", year: \"2008\", image: \"https://assets.nflxext.com/us/boxshots/hd1080/70143836.jpg\" },\n    { id: 1, title: \"Chernobyl\", genre: \"History\", director: \"Johan Renck\", year: \"2019\", image: \"https://i.pinimg.com/originals/34/2f/78/342f78e2cd7b297868420d20e3996145.jpg\" },\n    { id: 1, title: \"Twin Peaks\", genre: \"Thriller\", director: \"David Lynch\", year: \"1990\", image: \"https://m.media-amazon.com/images/I/81kk0IGqaLL._AC_SX425_.jpg\" },\n    { id: 1, title: \"Rick & Morty\", genre: \"Anime\", director: \"Justin Roiland\", year: \"2013\", image: \"https://m.media-amazon.com/images/I/518I-BTdWlL._AC_.jpg\" },\n    { id: 1, title: \"Arcane\", genre: \"Anime\", director: \"Alex Yee\", year: \"2021\", image: \"https://static.invenglobal.com/upload/image/2021/10/13/i1634086313758568.jpeg\" },\n    { id: 1, title: \"Death Note\", genre: \"Anime\", director: \"Tetsurō Araki\", year: \"2006\", image: \"https://www.nautiljon.com/images/anime/00/08/death_note_180.jpg?1668167682\" },\n    { id: 1, title: \"Black Mirror\", genre: \"Dystopia\", director: \"Charlie Brooker\", year: \"2011\", image: \"https://m.media-amazon.com/images/I/61Uq5yH0a6L._SL500_.jpg\" },\n    { id: 1, title: \"Dragon Ball\", genre: \"Anime\", director: \"Akira Toriyama\", year: \"1986\", image: \"https://m.media-amazon.com/images/I/81TkSJw2vqL.jpg\" },\n    { id: 1, title: \"The Office\", genre: \"\", director: \"\", year: \"\", image: \"\" },\n    { id: 1, title: \"\", genre: \"\", director: \"\", year: \"\", image: \"\" },\n  ]);\n  return (\n    <div>\n      <Header />\n      <main>\n        {tvshows.map((tvshow) => {\n            return(\n          <article className=\"tvShowsContainer\">\n            <div className=\"articleTvShows\">\n                <h2>{tvshow.title}</h2>\n                <p>{tvshow.genre}</p>\n                <p>{tvshow.director}</p>\n                <p className=\"year\">{tvshow.year}</p>\n                <div className=\"tvShowsImage\">\n                    <img src={tvshow.image} alt=\"\" />\n                </div>\n            </div>\n          </article>\n            );\n        })}\n      </main>\n      <ShowPromo/>\n      <MoviePromo/>\n    </div>\n  );\n};\n\nexport default Tvshows;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}